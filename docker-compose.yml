services:
    app:
        build:
            context: .
            dockerfile: ./docker/Dockerfile
            target: php_supervisor
            args:
                WWWGROUP: '${WWWGROUP}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${REVERB_SERVER_PORT:-8080}:${REVERB_SERVER_PORT:-8080}'
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        tmpfs:
            - /var/www/html/vendor
        volumes:
            - './vendor:/var/www/vendor'
            - '.:/var/www/html'
        networks:
            - app-network
        depends_on:
            - mysql
            - redis
            - minio

    worker:
        build:
            context: .
            dockerfile: ./docker/Dockerfile
            target: php_worker
            args:
                WWWGROUP: '${WWWGROUP}'
        privileged: true
        restart: always
        environment:
            WWWUSER: '${WWWUSER}'
        tmpfs:
            - '/var/work'
        volumes:
            - '.:/var/www/html'
        networks:
            - app-network
        depends_on:
            - mysql
            - redis
            - minio
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'db:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - app-network
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_DB_PORT:-6379}:6379'
        tmpfs:
            - /data
        networks:
            - app-network
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
        command: 'redis-server --save "" --appendonly no'
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'minio:/data/minio'
        networks:
            - app-network
        entrypoint: sh
        command: -c 'mkdir -p /data/minio/${AWS_BUCKET} && minio server /data/minio --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - curl
                - '-f'
                - 'http://localhost:9000/minio/health/live'
            retries: 3
            timeout: 5s
networks:
    app-network:
        driver: bridge
volumes:
    db:
        driver: local
    minio:
        driver: local
